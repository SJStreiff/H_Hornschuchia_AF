paste0(abio_dir, '2_soilgrids/ocs_0-30cm_mean_5000.tif'),
paste0(abio_dir, '2_soilgrids/phh2o_5-15cm_mean_5000.tif'),
paste0(abio_dir, '2_soilgrids/sand_5-15cm_mean_5000.tif'),
paste0(abio_dir, '2_soilgrids/silt_5-15cm_mean_5000.tif'),
paste0(abio_dir, '2_soilgrids/soc_5-15cm_mean_5000.tif'))
clim_stk <- terra::rast(clim_stk)
clim_stk[clim_stk == -9999] <- NA # add NAs instead of -9999
soil_stk <- terra::rast(soil_stk)
soil_stk <- terra::project(soil_stk, clim_stk) # project soil data onto climate extend and resolution
env_stk <- c(clim_stk, soil_stk)
names(env_stk) <- c('Bio01', 'Bio02', 'Bio03', 'Bio04', 'Bio05', 'Bio06', 'Bio07',
'Bio08', 'Bio09', 'Bio10', 'Bio11', 'Bio12', 'Bio13', 'Bio14',
'Bio15', 'Bio16', 'Bio17', 'Bio18', 'Bio19', 'Bio20', 'Bio21',
'bulk_dens', 'cation_exchange_capacity', 'vol_fraction_coarse',
'clay_prop', 'nitrogen', 'org_C_dens', 'org_C_stock', 'soil_pH',
'sand_prop', 'silt_prop', 'soil_org_carbon')
# extract abitoic values for all layers and points
coords <- dat[, c("decimalLongitude", "decimalLatitude")]
# extract abitoic values for all layers and points
coords <- dat[, c("long", "lat")]
abio <- NULL
for(i in names(env_stk)){
print(i)
# loop thorugh abiotic layers
lay <- env_stk[[i]]
abio_tmp <- as.data.frame(terra::extract(lay, coords))
colnames(abio_tmp[2]) <- i
if(i == names(env_stk[[1]])){abio <- abio_tmp[2]}
else{abio <- cbind(abio, abio_tmp[2])}
}
ab_dat <- cbind(dat, abio)
save(ab_dat, file = 'new_data_extr.Rdata')
####################################################################################################
#  2023-05-03 sjrs
# HORNSCHUCHIA and the Atlantic Forest
#
# extract climate and do some comparisons between species
####################################################################################################
rm(list = ls())
# INIT
wd <- '~/Sync/1_Annonaceae/H_Hornschuchia_AF/0_clim_comparisons/' # the working dir
dat_file <- '~/Sync/1_Annonaceae/H_Hornschuchia_AF/Y_data/Hornschuchia_Bocagea_Trigynaea_occurence.csv'
pl <- c('ggplot2',
'raster',
'vegan',
'terra',
'ape',
'dplyr')
sapply(pl, require, character.only=TRUE)
source('~/Sync/serafins_functions.R')
setwd(wd)
load('data_extr.Rdata')
load('new_data_extr.Rdata')
ordi_dat <- ab_dat[ab_dat$genus %in% c('Hornschuchia', 'Trigynaea', 'Bocagea'),
c('genus','species', 'Bio01', 'Bio02', 'Bio03', 'Bio04', 'Bio05', 'Bio06', 'Bio07',
'Bio08', 'Bio09', 'Bio10', 'Bio11', 'Bio12', 'Bio13', 'Bio14',
'Bio15', 'Bio16', 'Bio17', 'Bio18', 'Bio19', 'Bio20', 'Bio21',
'bulk_dens', 'cation_exchange_capacity', 'vol_fraction_coarse',
'clay_prop', 'nitrogen', 'org_C_dens', 'org_C_stock', 'soil_pH',
'sand_prop', 'silt_prop', 'soil_org_carbon')]
ordi_dat <- na.omit(ordi_dat)
#variables <- c('Bio12', 'Bio17', 'Bio07', 'clay', 'soil_ph')
colnames(ab_dat)
#variables <- c('Bio12', 'Bio17', 'Bio07', 'clay', 'soil_ph')
colnames(ab_dat) == 'name'
#variables <- c('Bio12', 'Bio17', 'Bio07', 'clay', 'soil_ph')
colnames(ab_dat)[colnames(ab_dat) == 'name'] <- 'species'
ordi_dat <- ab_dat[ab_dat$genus %in% c('Hornschuchia', 'Trigynaea', 'Bocagea'),
c('genus','species', 'Bio01', 'Bio02', 'Bio03', 'Bio04', 'Bio05', 'Bio06', 'Bio07',
'Bio08', 'Bio09', 'Bio10', 'Bio11', 'Bio12', 'Bio13', 'Bio14',
'Bio15', 'Bio16', 'Bio17', 'Bio18', 'Bio19', 'Bio20', 'Bio21',
'bulk_dens', 'cation_exchange_capacity', 'vol_fraction_coarse',
'clay_prop', 'nitrogen', 'org_C_dens', 'org_C_stock', 'soil_pH',
'sand_prop', 'silt_prop', 'soil_org_carbon')]
ordi_dat <- na.omit(ordi_dat)
for(i in 3:length(colnames(ordi_dat))){ # or for(i in 1:19){
ggplot() +
geom_density(data = ordi_dat, aes(x = ordi_dat[,i], group =genus, colour =genus)) +
theme_classic() +
xlab(colnames(ordi_dat)[i])
#ggtitle(label = abc[i])
print(i)
#p2
}
groupBY <- ordi_dat$genus
pca_dat <- ordi_dat[,-1]
pca_dat <- pca_dat[,-1]
# this makes the correlation matrix between all variables of all genera data
correlation <- cor(pca_dat, method = 'pearson') # do a pearson correlation between all variables
library(corrplot)
corrplot(correlation,
order = 'hclust', # order by hierarchical clusting
addrect = 7) # add rectangle around clusters identified by hclust
#colnames(pca) <- nms
pc <- prcomp(pca_dat, scale. = TRUE)
#pc <- prcomp(pc_dat, scale. = FALSE)
library(ggbiplot)
ggbiplot(pc, scale=TRUE, ellipse = TRUE, groups = groupBY) + ggtitle('PCA grouped by genus')
ggbiplot(pc, scale=TRUE, ellipse = TRUE, groups = groupBY, choices = c(3,4)) # pc axies 3 and 4
cur_all <- dCUR::CUR(pca_dat,
variables =  colnames(pca_dat),
cur_method = 'mixture',
rows = 0.999,
columns = 0.3,
standardize = T)
red_pca_dat <- cur_all$C_cur
rpc <- prcomp(red_pca_dat, scale. = TRUE)
ggbiplot(rpc, scale = F, ellipse = T, groups = groupBY)
abio <- c('species', 'Bio01', 'soil_pH', 'Bio12', 'nitrogen', 'Bio14', 'vol_fraction_coarse', 'cation_exchange_capacity')
# Round 1: A niche best describing
hyp_dat <- na.omit(ab_dat[ab_dat$genus %in% c('Hornschuchia', 'Trigynaea', 'Bocagea'),
abio])
pc_red_dim <- prcomp(hyp_dat[,-1], scale = F)
ggbiplot(pc_red_dim, scale = T, ellipse = T, groups = groupBY)
#install.packages('dynRB')
library(dynRB)
r <- dynRB_VPa(hyp_dat)
overview(r)
# this makes the correlation matrix between all variables of all genera data
correlation <- cor(pca_dat, method = 'pearson') # do a pearson correlation between all variables
groupBY <- ordi_dat$genus
pca_dat <- ordi_dat[,-1]
pca_dat <- pca_dat[,-1]
groupBY <- ordi_dat$genus
pca_dat <- ordi_dat[,-1]
pca_dat <- pca_dat[,-1]
# this makes the correlation matrix between all variables of all genera data
correlation <- cor(pca_dat, method = 'pearson') # do a pearson correlation between all variables
library(corrplot)
corrplot(correlation,
order = 'hclust', # order by hierarchical clusting
addrect = 7) # add rectangle around clusters identified by hclust
#colnames(pca) <- nms
pc <- prcomp(pca_dat, scale. = TRUE)
#pc <- prcomp(pc_dat, scale. = FALSE)
library(ggbiplot)
ggbiplot(pc, scale=TRUE, ellipse = TRUE, groups = groupBY) + ggtitle('PCA grouped by genus')
ggbiplot(pc, scale=TRUE, ellipse = TRUE, groups = groupBY, choices = c(3,4)) # pc axies 3 and 4
summary(pc)
#colnames(pca) <- nms
pc <- prcomp(pca_dat, scale. = FALSE)
summary(pc)
loadings(pc)
#colnames(pca) <- nms
pc <- princomp(pca_dat, scale. = FALSE)
#colnames(pca) <- nms
pc <- princomp(pca_dat, scale = FALSE)
#colnames(pca) <- nms
pc <- princomp(pca_dat)#, scale = FALSE)
loadings(pc)
#colnames(pca) <- nms
pc <- prcomp(pca_dat)#, scale = FALSE)
loadings(pc)
#colnames(pca) <- nms
pc <- prcomp(pca_dat, scale = TRUE)
loadings(pc)
summary(pc)
#colnames(pca) <- nms
pc <- prcomp(pca_dat, scale = FALSE)
summary(pc)
unique(ab_dat$species)
####################################################################################################
#  2023-05-03 sjrs
# HORNSCHUCHIA and the Atlantic Forest
#
# extract climate and do some comparisons between species
####################################################################################################
rm(list = ls())
# INIT
wd <- '~/Sync/1_Annonaceae/H_Hornschuchia_AF/0_clim_comparisons/' # the working dir
dat_file <- '~/Sync/1_Annonaceae/H_Hornschuchia_AF/Y_data/Hornschuchia_Bocagea_Trigynaea_occurence.csv'
pl <- c('ggplot2',
'raster',
'vegan',
'terra',
'ape',
'dplyr')
sapply(pl, require, character.only=TRUE)
source('~/Sync/serafins_functions.R')
####################################################################################################
#  2023-05-03 sjrs
# HORNSCHUCHIA and the Atlantic Forest
#
# extract climate and do some comparisons between species
####################################################################################################
rm(list = ls())
# INIT
wd <- '~/Sync/1_Annonaceae/H_Hornschuchia_AF/0_clim_comparisons/' # the working dir
dat_file <- '~/Sync/1_Annonaceae/H_Hornschuchia_AF/Y_data/Hornschuchia_Bocagea_Trigynaea_occurence.csv'
pl <- c('ggplot2',
'raster',
'vegan',
'terra',
'ape',
'dplyr')
sapply(pl, require, character.only=TRUE)
source('~/Sync/serafins_functions.R')
setwd(wd)
load('new_data_extr.Rdata')
scatterplot3d::scatterplot3d(ab_dat)
scatterplot3d::scatterplot3d(ab_dat, color = NA)
#variables <- c('Bio12', 'Bio17', 'Bio07', 'clay', 'soil_ph')
colnames(ab_dat)[colnames(ab_dat) == 'name'] <- 'species'
ordi_dat <- ab_dat[ab_dat$genus %in% c('Hornschuchia', 'Trigynaea', 'Bocagea'),
c('genus','species', 'Bio01', 'Bio02', 'Bio03', 'Bio04', 'Bio05', 'Bio06', 'Bio07',
'Bio08', 'Bio09', 'Bio10', 'Bio11', 'Bio12', 'Bio13', 'Bio14',
'Bio15', 'Bio16', 'Bio17', 'Bio18', 'Bio19', 'Bio20', 'Bio21',
'bulk_dens', 'cation_exchange_capacity', 'vol_fraction_coarse',
'clay_prop', 'nitrogen', 'org_C_dens', 'org_C_stock', 'soil_pH',
'sand_prop', 'silt_prop', 'soil_org_carbon')]
ordi_dat <- na.omit(ordi_dat)
for(i in 3:length(colnames(ordi_dat))){ # or for(i in 1:19){
ggplot() +
geom_density(data = ordi_dat, aes(x = ordi_dat[,i], group =genus, colour =genus)) +
theme_classic() +
xlab(colnames(ordi_dat)[i])
#ggtitle(label = abc[i])
print(i)
#p2
}
groupBY <- ordi_dat$genus
pca_dat <- ordi_dat[,-1]
pca_dat <- pca_dat[,-1]
# this makes the correlation matrix between all variables of all genera data
correlation <- cor(pca_dat, method = 'pearson') # do a pearson correlation between all variables
library(corrplot)
corrplot(correlation,
order = 'hclust', # order by hierarchical clusting
addrect = 7) # add rectangle around clusters identified by hclust
dev.off
dev.off()
corrplot(correlation,
order = 'hclust', # order by hierarchical clusting
addrect = 7) # add rectangle around clusters identified by hclust
library(MASS)
dat_file <- '~/Sync/1_Annonaceae/H_Hornschuchia_AF/Y_data/Hornschuchia_Bocagea_Trigynaea_occurence.csv'
dat1 <- read.table(file = dat_file, sep = ';', head = T)
load('new_data_extr.Rdata')
# if the Rdata does not exist, run this code:
# source('./0_extracting.R')
ab_dat$AF <- dat1$AF
#variables <- c('Bio12', 'Bio17', 'Bio07', 'clay', 'soil_ph')
colnames(ab_dat)[colnames(ab_dat) == 'name'] <- 'species'
ordi_dat <- ab_dat[ab_dat$genus %in% c('Hornschuchia', 'Trigynaea', 'Bocagea'),
c('genus','species', 'Bio01', 'Bio02', 'Bio03', 'Bio04', 'Bio05', 'Bio06', 'Bio07',
'Bio08', 'Bio09', 'Bio10', 'Bio11', 'Bio12', 'Bio13', 'Bio14',
'Bio15', 'Bio16', 'Bio17', 'Bio18', 'Bio19', 'Bio20', 'Bio21',
'bulk_dens', 'cation_exchange_capacity', 'vol_fraction_coarse',
'clay_prop', 'nitrogen', 'org_C_dens', 'org_C_stock', 'soil_pH',
'sand_prop', 'silt_prop', 'soil_org_carbon')]
ordi_dat <- na.omit(ordi_dat)
ordi_dat <- ab_dat[ab_dat$genus %in% c('Hornschuchia', 'Trigynaea', 'Bocagea'),
c('genus','species', 'AF' 'Bio01', 'Bio02', 'Bio03', 'Bio04', 'Bio05', 'Bio06', 'Bio07',
ordi_dat <- ab_dat[ab_dat$genus %in% c('Hornschuchia', 'Trigynaea', 'Bocagea'),
c('genus','species', 'AF', 'Bio01', 'Bio02', 'Bio03', 'Bio04', 'Bio05', 'Bio06', 'Bio07',
'Bio08', 'Bio09', 'Bio10', 'Bio11', 'Bio12', 'Bio13', 'Bio14',
'Bio15', 'Bio16', 'Bio17', 'Bio18', 'Bio19', 'Bio20', 'Bio21',
'bulk_dens', 'cation_exchange_capacity', 'vol_fraction_coarse',
'clay_prop', 'nitrogen', 'org_C_dens', 'org_C_stock', 'soil_pH',
'sand_prop', 'silt_prop', 'soil_org_carbon')]
ordi_dat <- na.omit(ordi_dat)
groupBY_AF <- ordi_dat$AF
pca_dat <- ordi_dat[,-1]
pca_dat <- pca_dat[,-1]
pca_dat <- pca_dat[,-1]
# this makes the correlation matrix between all variables of all genera data
correlation <- cor(pca_dat, method = 'pearson') # do a pearson correlation between all variables
library(corrplot)
corrplot(correlation,
order = 'hclust', # order by hierarchical clusting
addrect = 7) # add rectangle around clusters identified by hclust
#colnames(pca) <- nms
pc <- prcomp(pca_dat, scale = FALSE)
#pc <- prcomp(pc_dat, scale. = FALSE)
library(ggbiplot)
ggbiplot(pc, scale=TRUE, ellipse = TRUE, groups = groupBY) + ggtitle('PCA grouped by genus')
groupBY <- ordi_dat$genus
#colnames(pca) <- nms
pc <- prcomp(pca_dat, scale = FALSE)
#pc <- prcomp(pc_dat, scale. = FALSE)
library(ggbiplot)
ggbiplot(pc, scale=TRUE, ellipse = TRUE, groups = groupBY) + ggtitle('PCA grouped by genus')
ggbiplot(pc, scale=TRUE, ellipse = TRUE, groups = groupBY_AF) + ggtitle('PCA grouped by biogeogr. region')
ggbiplot(pc, scale=TRUE, ellipse = TRUE, groups = groupBY, choices = c(3,4)) # pc axies 3 and 4
cur_all <- dCUR::CUR(pca_dat,
variables =  colnames(pca_dat),
cur_method = 'mixture',
rows = 0.999,
columns = 0.3,
standardize = T)
red_pca_dat <- cur_all$C_cur
rpc <- prcomp(red_pca_dat, scale. = TRUE)
ggbiplot(rpc, scale = F, ellipse = T, groups = groupBY)
ggbiplot(rpc, scale = F, ellipse = T, groups = groupBY_AF)
cur_all <- dCUR::CUR(pca_dat,
variables =  colnames(pca_dat),
cur_method = 'mixture',
rows = 0.999,
columns = 0.3,
standardize = F)
red_pca_dat <- cur_all$C_cur
rpc <- prcomp(red_pca_dat, scale. = TRUE)
ggbiplot(rpc, scale = F, ellipse = T, groups = groupBY)
ggbiplot(rpc, scale = F, ellipse = T, groups = groupBY_AF)
library(MASS)
lda1 <- lda(AF ~. ,data = ordi_dat )
da_dat <- ordi_dat[,-1]
da_dat <- da_dat[,-1]
lda1 <- lda(AF ~. ,data = da_dat )
?lda
lda1 <- lda(pca_dat, grouping = group_BY_AF )
groupBY <- ordi_dat$genus
groupBY_AF <- ordi_dat$AF
pca_dat <- ordi_dat[,-1]
pca_dat <- pca_dat[,-1]
pca_dat <- pca_dat[,-1]
# this makes the correlation matrix between all variables of all genera data
correlation <- cor(pca_dat, method = 'pearson') # do a pearson correlation between all variables
library(corrplot)
corrplot(correlation,
order = 'hclust', # order by hierarchical clusting
addrect = 7) # add rectangle around clusters identified by hclust
#colnames(pca) <- nms
pc <- prcomp(pca_dat, scale = FALSE)
lda1 <- lda(pca_dat, grouping = groupBY_AF )
View(pca_dat)
abio <- c('species', 'Bio01', 'soil_pH', 'Bio12', 'nitrogen', 'Bio14', 'vol_fraction_coarse', 'cation_exchange_capacity')
# Round 1: A niche best describing
hyp_dat <- na.omit(ab_dat[ab_dat$genus %in% c('Hornschuchia', 'Trigynaea', 'Bocagea'),
abio])
pc_red_dim <- prcomp(hyp_dat[,-1], scale = F)
da_dat <- hyp_dat[,-1]
lda1 <- lda(da_dat, grouping = groupBY_AF )
abio <- c('species','AF', 'Bio01', 'soil_pH', 'Bio12', 'nitrogen', 'Bio14', 'vol_fraction_coarse', 'cation_exchange_capacity')
# Round 1: A niche best describing
hyp_dat <- na.omit(ab_dat[ab_dat$genus %in% c('Hornschuchia', 'Trigynaea', 'Bocagea'),
abio])
da_dat <- hyp_dat[,-1]
af_vector <- da_dat[,'AF']
da_dat <- da_dat[,-1]
lda1 <- lda(da_dat, grouping = af_vector )
lda1
wine.lda.values <- predict(lda1)
plot(wine.lda.values$x[,1],wine.lda.values$x[,2]) # make a scatterplot
plot(wine.lda.values$x[,1],wine.lda.values$x[,2]) # make a scatterplot
lda1
?ldahist
ldahist(da_dat, g = af_vector)
ldahist(da_dat, g = af_vector)
View(da_dat)
lda1pred <- predict(lda1
)
ldahist(data = lda1pred$x[,1], g=af_vector)
ldahist(data = lda1pred$x[,2], g=af_vector)
abio <- c('species','AF', 'Bio01', 'Bio07','soil_pH', 'Bio12', 'nitrogen', 'Bio14', 'vol_fraction_coarse', 'cation_exchange_capacity')
# Round 1: A niche best describing
hyp_dat <- na.omit(ab_dat[ab_dat$genus %in% c('Hornschuchia', 'Trigynaea', 'Bocagea'),
abio])
pc_red_dim <- prcomp(hyp_dat[,-1], scale = F)
library(MASS)
da_dat <- hyp_dat[,-1]
af_vector <- da_dat[,'AF']
da_dat <- da_dat[,-1]
lda1 <- lda(da_dat, grouping = af_vector )
ldahist(da_dat, g = af_vector)
lda1pred <- predict(lda1)
ldahist(data = lda1pred$x[,1], g=af_vector)
ldahist(data = lda1pred$x[,2], g=af_vector)
lda1
point_count <- ab_dat %>% dplyr::count(ab_dat$species, name=NULL)
View(point_count)
sp_too_rare <- point_count[point_count$n <= 5,]
View(sp_too_rare)
sp_too_rare <- point_count[point_count$n <= 4,]
sp_too_rare <- point_count[point_count$n <= 3,]
# these species only have 3 or less points
sp_too_rare <- point_count[point_count$n < 3,]
clean_dat <_ ab_dat[ab_dat$species %notin% sp_too_rare$`ab_dat$species`,]
clean_dat <- ab_dat[ab_dat$species %notin% sp_too_rare$`ab_dat$species`,]
ordi_dat <- clean_dat[clean_dat$genus %in% c('Hornschuchia', 'Trigynaea', 'Bocagea'),
c('genus','species', 'AF', 'Bio01', 'Bio02', 'Bio03', 'Bio04', 'Bio05', 'Bio06', 'Bio07',
'Bio08', 'Bio09', 'Bio10', 'Bio11', 'Bio12', 'Bio13', 'Bio14',
'Bio15', 'Bio16', 'Bio17', 'Bio18', 'Bio19', 'Bio20', 'Bio21',
'bulk_dens', 'cation_exchange_capacity', 'vol_fraction_coarse',
'clay_prop', 'nitrogen', 'org_C_dens', 'org_C_stock', 'soil_pH',
'sand_prop', 'silt_prop', 'soil_org_carbon')]
ordi_dat <- na.omit(ordi_dat)
groupBY <- ordi_dat$genus
groupBY_AF <- ordi_dat$AF
pca_dat <- ordi_dat[,-1]
pca_dat <- pca_dat[,-1]
pca_dat <- pca_dat[,-1]
# this makes the correlation matrix between all variables of all genera data
correlation <- cor(pca_dat, method = 'pearson') # do a pearson correlation between all variables
library(corrplot)
corrplot(correlation,
order = 'hclust', # order by hierarchical clusting
addrect = 7) # add rectangle around clusters identified by hclust
#colnames(pca) <- nms
pc <- prcomp(pca_dat, scale = FALSE)
#pc <- prcomp(pc_dat, scale. = FALSE)
library(ggbiplot)
ggbiplot(pc, scale=TRUE, ellipse = TRUE, groups = groupBY) + ggtitle('PCA grouped by genus')
ggbiplot(pc, scale=FALSE, ellipse = TRUE, groups = groupBY) + ggtitle('PCA grouped by genus')
cur_all <- dCUR::CUR(pca_dat,
variables =  colnames(pca_dat),
cur_method = 'mixture',
rows = 0.999,
columns = 0.3,
standardize = F)
red_pca_dat <- cur_all$C_cur
rpc <- prcomp(red_pca_dat, scale. = TRUE)
ggbiplot(rpc, scale = F, ellipse = T, groups = groupBY)
ggbiplot(rpc, scale = F, ellipse = T, groups = groupBY_AF)
?CUR
abio <- c('species','AF', 'Bio01', 'Bio07','soil_pH', 'Bio12', 'nitrogen', 'Bio14', 'vol_fraction_coarse', 'cation_exchange_capacity')
hyp_dat <- na.omit(clean_dat[clean_dat$genus %in% c('Hornschuchia', 'Trigynaea', 'Bocagea'),
abio])
pc_red_dim <- prcomp(hyp_dat[,-1], scale = F)
library(MASS)
da_dat <- hyp_dat[,-1]
af_vector <- da_dat[,'AF']
da_dat <- da_dat[,-1]
lda1 <- lda(da_dat, grouping = af_vector )
lda1
lda1pred <- predict(lda1)
ldahist(data = lda1pred$x[,1], g=af_vector)
ldahist(data = lda1pred$x[,2], g=af_vector)
ggbiplot(rpc, scale = F, ellipse = T, groups = groupBY_AF)
ggbiplot(pc, scale=TRUE, ellipse = TRUE, groups = groupBY_AF) + ggtitle('PCA grouped by biogeogr. region')
#install.packages('dynRB')
library(dynRB)
r <- dynRB_VPa(hyp_dat)
View(hyp_dat)
r <- dynRB_VPa(hyp_dat[,-2])
overview(r)
om <- reshape(r$result[,c(1,2,4)], direction="wide", idvar="V1", timevar="V2")
mantel(as.dist(om[2:ncol(om)]), as.dist(t(om[2:ncol(om)])), permutations = 1000)
plot(as.dist(om[2:ncol(om)]), as.dist(t(om[2:ncol(om)])))
result <- r$result
Overlap <- as.numeric(ifelse(result$V1 == result$V2, "NA", result$port_prod))
is.numeric(Overlap)
Result2 <- cbind(result, Overlap)
breaks <- seq(min(Overlap, na.rm=TRUE),max(Overlap, na.rm=TRUE),
by=round(max(Overlap, na.rm=TRUE)/10, digits=3))
col1 <- colorRampPalette(c("white", "navyblue")) #define color gradient
ggplot(Result2, aes(x = V1, y = V2)) +
geom_tile(data = subset(Result2, !is.na(Overlap)), aes(fill = Overlap), color="black") +
geom_tile(data = subset(Result2,  is.na(Overlap)), fill = "lightgrey", color="black") +
scale_fill_gradientn(colours=col1(8), breaks=breaks, guide="colorbar",
limits=c(min(Overlap, na.rm=TRUE),max(Overlap, na.rm=TRUE))) +
ggtitle('N-hypervolume overlap for reduced # of variables') +
theme(
plot.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_text(colour="black", size = rel(1.5), angle=35, hjust = 1),
axis.text.y = element_text(colour="black", size = rel(1.5)),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
### do the same but over pc axes (inbuilt in dynRB)
r <- dynRB_VPa(hyp_dat, pca.corr = T)
om <- reshape(r$result[,c(1,2,4)], direction="wide", idvar="V1", timevar="V2")
mantel(as.dist(om[2:ncol(om)]), as.dist(t(om[2:ncol(om)])), permutations = 1000)
plot(as.dist(om[2:ncol(om)]), as.dist(t(om[2:ncol(om)])))
r <- dynRB_VPa(ordi_dat)
result <- r$result
Overlap <- as.numeric(ifelse(result$V1 == result$V2, "NA", result$port_prod))
is.numeric(Overlap)
Result2 <- cbind(result, Overlap)
ggplot(Result2, aes(x = V1, y = V2)) +
geom_tile(data = subset(Result2, !is.na(Overlap)), aes(fill = Overlap), color="black") +
geom_tile(data = subset(Result2,  is.na(Overlap)), fill = "lightgrey", color="black")
breaks <- seq(min(Overlap, na.rm=TRUE),max(Overlap, na.rm=TRUE),
by=round(max(Overlap, na.rm=TRUE)/10, digits=3))
col1 <- colorRampPalette(c("white", "navyblue")) #define color gradient
ggplot(Result2, aes(x = V1, y = V2)) +
geom_tile(data = subset(Result2, !is.na(Overlap)), aes(fill = Overlap), color="black") +
geom_tile(data = subset(Result2,  is.na(Overlap)), fill = "lightgrey", color="black") +
scale_fill_gradientn(colours=col1(8), breaks=breaks, guide="colorbar",
limits=c(min(Overlap, na.rm=TRUE),max(Overlap, na.rm=TRUE))) +
ggtitle('N-hypervolume overlap for \n reduced # of variables over PC axes') +
theme(
plot.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_text(colour="black", size = rel(1.5), angle=35, hjust = 1),
axis.text.y = element_text(colour="black", size = rel(1.5)),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
AF <- hyp_dat$AF
pc_hyp_dat <- hyp_dat[,-1]
pc_red_dim <- prcomp(pc_hyp_dat[,-1], scale = F)
ggbiplot(pc_red_dim, scale = T, ellipse = T, groups = groupBY)
ggbiplot(pc_red_dim, scale = T, ellipse = T, groups = AF)
pc_red_dim <- prcomp(pc_hyp_dat[,-1], scale = T)
ggbiplot(pc_red_dim, scale = T, ellipse = T, groups = AF)
ggbiplot(pc_red_dim, scale = T, ellipse = T, groups = AF) + ggtitle('reduced variables grouped by AF')
lda1 <- lda(da_dat, grouping = af_vector )
lda1
View(sp_too_rare)
sp_too_rare
